version: "3.8"

networks:
  redisn:
    driver: bridge

services:
  # 1) Servicio para el scraper
  waze-data-collector:
    build: ./waze-data-collector
    container_name: waze-data-collector
    networks: [redisn]

  # 2) Servicio para MongoDB
  mongo:
    image: mongo:latest
    container_name: mongo_waze
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=pass
    volumes:
      - mongo_data:/data/db
    networks:
      - redisn
    depends_on:
      - waze-data-collector

   # 3) Mongo Express
  mongo-express:
    image: mongo-express
    container_name: mongo_express_waze
    ports: ["8081:8081"]
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: pass
      ME_CONFIG_MONGODB_SERVER: mongo
    networks: [redisn]
    depends_on: [mongo]

  # 4) Redis y RedisInsight
  redis:
    image: bitnami/redis:latest
    container_name: redis_waze
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
      REDIS_EXTRA_FLAGS: "--maxmemory 2mb --maxmemory-policy allkeys-random"
    ports: ["6379:6379"]
    volumes:
      - redis_data_1:/bitnami/redis/data
    networks: [redisn]
    depends_on: [mongo]

  redisinsight:
    image: redislabs/redisinsight:latest
    container_name: redisinsight_waze
    ports: ["5540:5540"]
    volumes:
      - redis-insight:/data
    networks: [redisn]
    depends_on: [redis]

# 5) Traffic generator (Flask/Python)
  request:
    build: ./traffic-generator
    container_name: traffic-generator
    networks: [redisn]
    depends_on: [waze-data-collector, redis]

  redis-cache:
    build: ./query-cache
    container_name: redis_cache_waze
    ports: ["5000:5000"]
    networks: [redisn]
    depends_on: [mongo, redis, waze-data-collector]

  # 6) Exportar datos de Mongo a JSON
  mongo-exporter:
    image: mongo:latest
    container_name: mongo_exporter
    depends_on: [mongo]
    command:
      [
        "mongoexport",
        "--host=mongo",
        "--username=admin",
        "--password=pass",
        "--authenticationDatabase=admin",
        "--db=waze",
        "--collection=events",
        "--out=/data/eventos_waze.json"
      ]
    volumes:
      - ./pig-hadoop/data:/data
    networks: [redisn]

  # 7) Procesamiento con Hadoop + Pig
  pig-processor:
    build: ./pig-hadoop
    container_name: pig_processor
    depends_on: [mongo-exporter]
    volumes:
      - ./pig-hadoop/data:/data   # Datos JSON y salida CSV
      - ./pig-hadoop/procesar_eventos.pig:/data/procesar_eventos.pig:ro  # script Pig
    networks: [redisn]

volumes:
  mongo_data:
    driver: local
  redis_data_1:
    driver: local
  redis-insight:




# docker rm $(docker ps -a -q)

## lista de errores

# redis_cache_waze     | ‚ùå Error al conectar con MongoDB: Authentication failed., full error: {'ok': 0.0, 'errmsg': 'Authentication failed.', 'code': 18, 'codeName': 'AuthenticationFailed'}
# traffic-generator    | No se pudieron obtener los IDs de eventos.
# traffic-generator exited with code 0
