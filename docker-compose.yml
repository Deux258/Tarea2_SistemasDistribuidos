version: "3.8"

networks:
  redisn:
    driver: bridge

services:
  # Servicio para el scraper
  waze-data-collector:
    build: ./waze-data-collector
    container_name: waze-data-collector
    networks:
      - redisn
    volumes:
      - ./waze-data-collector:/app

  # Servicio para MongoDB
  mongo:
    image: mongo:latest
    container_name: mongo_waze
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=pass
    volumes:
      - mongo_data:/data/db
    networks:
      - redisn
    depends_on:
      - waze-data-collector

  # Servicio para Mongo Express
  mongo-express:
    image: mongo-express
    container_name: mongo_express_waze
    restart: always
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=pass
      - ME_CONFIG_MONGODB_SERVER=mongo
    networks:
      - redisn
    depends_on:
      - mongo
      - waze-data-collector

  # Servicio para Redis
  redis:
    image: bitnami/redis:latest
    restart: always
    container_name: redis_waze
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_EXTRA_FLAGS=--maxmemory 2mb --maxmemory-policy allkeys-random
    ports:
      - "6379:6379"
    volumes:
      - redis_data_1:/bitnami/redis/data
    networks:
      - redisn
    depends_on:
      - mongo
      - waze-data-collector
        
  # Servicio para RedisInsight
  redisinsight:
    image: redislabs/redisinsight:latest
    restart: always
    container_name: redisinsight_waze
    volumes:
      - redis-insight:/data
    ports:
      - "5540:5540"
    networks:
      - redisn
    depends_on:
      - redis

  # Servicio para el request handler
  request:
    build: ./traffic-generator
    container_name: traffic-generator
    depends_on:
      - waze-data-collector
    networks:
      - redisn
    restart: always

  # Servicio para el cache (Flask)
  redis-cache:
    build: ./query-cache
    container_name: redis_cache_waze
    restart: always
    ports:
      - "5000:5000"
    networks:
      - redisn
    volumes:
      - ./query-cache:/app
    depends_on:
      - mongo
      - redis
      - waze-data-collector

volumes:
  mongo_data:
    driver: local
  redis_data_1:
    driver: local
  redis-insight:

  ### PARTE 2
    mongo-exporter:
    image: mongo:latest
    container_name: mongo_exporter
    depends_on:
      - mongo
    command:
      [
        "mongoexport",
        "--host=mongo",
        "--username=admin",
        "--password=pass",
        "--authenticationDatabase=admin",
        "--db=waze",
        "--collection=events",
        "--out=/data/eventos_waze.json"
      ]
    volumes:
      - ./pig-hadoop/data:/data






# docker rm $(docker ps -a -q)