version: "3.8"

networks:
  redisn:
    driver: bridge

services:
  # Servicio para MongoDB
  mongo:
    build: ./data-storage
    container_name: mongo_waze
    healthcheck:
      test: ["CMD", "mongo", "--username", "admin", "--password", "admin123", "--authenticationDatabase", "admin", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 10
    ports:
      - "27017:27017"
    volumes:
      - ./data-storage/alertas.json:/data/alertas.json:ro
      - mongo_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin123
    networks:
      - redisn
    command: mongod --bind_ip_all --auth

  # Servicio para el scraper
  waze-scraper:
    build: ./waze-scraper
    container_name: waze_scraper
    networks:
      - redisn
    volumes:
      - ./waze-scraper:/app
      - ./data-storage:/data
    depends_on:
      - mongo

  # Servicio para Mongo Express
  mongo-express:
    image: mongo-express
    container_name: mongo_express_waze
    restart: always
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=admin123
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
    networks:
      - redisn
    depends_on:
      - mongo

  # Servicio para Redis
  redis:
    image: bitnami/redis:latest
    restart: always
    container_name: redis_waze
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_EXTRA_FLAGS=--maxmemory 2mb --maxmemory-policy allkeys-random
    ports:
      - "6379:6379"
    volumes:
      - redis_data_1:/bitnami/redis/data
    networks:
      - redisn

  # Servicio para RedisInsight
  redisinsight:
    image: redislabs/redisinsight:latest
    restart: always
    container_name: redisinsight_waze
    volumes:
      - redis-insight:/data
    ports:
      - "5540:5540"
    networks:
      - redisn
    depends_on:
      - redis

  # Servicio para el pig-filter
  pig-filter:
    build: ./pig-filter
    container_name: pig_filter
    networks:
      - redisn
    volumes:
      - ./data-storage:/data  # Volumen compartido para datos
      - ./pig-filter:/app
    depends_on:
      - waze-scraper
      - mongo

  # Servicio para el pig-processor
  pig-processor:
    build: ./pig-processor
    container_name: pig_processor
    networks:
      - redisn
    volumes:
      - ./pig-processor:/app
    depends_on:
      - pig-filter
      - redis

volumes:
  mongo_data:
  redis_data_1:
    driver: local
  redis-insight: