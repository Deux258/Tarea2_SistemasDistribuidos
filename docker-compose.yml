version: "3.8"

networks:
  redisn:
    driver: bridge

services:
  # Servicio para el recolector de datos de Waze
  waze-data-collector:
    build: ./waze-data-collector
    container_name: waze_data_collector
    networks:
      - redisn
    volumes:
      - ./waze-data-collector:/app
    depends_on:
      - mongo

  # Servicio para MongoDB
  mongo:
    image: mongo:latest
    container_name: mongo_waze
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin123
    volumes:
      - mongo_data:/data/db
    networks:
      - redisn

  # Servicio para la interfaz de administración de MongoDB
  mongo-express:
    image: mongo-express:latest
    container_name: mongo_express_waze
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=admin123
      - ME_CONFIG_MONGODB_SERVER=mongo
    networks:
      - redisn
    depends_on:
      - mongo

  # Servicio para Redis
  redis:
    image: bitnami/redis:latest
    restart: always
    container_name: redis_cache
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_EXTRA_FLAGS=--maxmemory 2mb --maxmemory-policy allkeys-random
    ports:
      - "6379:6379"
    volumes:
      - redis_data_1:/bitnami/redis/data
    networks:
      - redisn
    
  pig-filter:
    build: ./pig-filter
    container_name: pig_filter
    volumes:
      - ./data-storage/data/map-scraper:/data
      - ./pig-filter:/scripts
    depends_on:
      - mongo
    networks:
      - redisn

  # Servicio para la interfaz de administración de Redis
  redis-admin:
    image: redislabs/redisinsight:latest
    restart: always
    container_name: redis_admin
    volumes:
      - redis-insight:/data
    ports:
      - "5540:5540"
    networks:
      - redisn
    depends_on:
      - redis

  # Servicio para el generador de tráfico
  traffic-generator:
    build: ./traffic-generator
    container_name: traffic_generator
    depends_on:
      - mongo
      - redis
    networks:
      - redisn
    restart: always

  # Servicio para el sistema de caché
  query-cache:
    build: ./query-cache
    container_name: query_cache
    restart: always
    ports:
      - "5000:5000"
    networks:
      - redisn
    volumes:
      - ./query-cache:/app
    depends_on:
      - redis
      - mongo

volumes:
  mongo_data:
    driver: local
  redis_data_1:
    driver: local
  redis-insight:
